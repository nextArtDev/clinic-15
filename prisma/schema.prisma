// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(cuid())
  phone      String  @unique
  name       String
  password   String
  image      Image?  @relation(fields: [imageId], references: [id])
  role       Role    @default(USER)
  isVerified Boolean @default(false)

  verificationCode Int?
  verificationDate DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageId   String?
  Review    Review[]

  username String? @unique
  bio      String?
  website  String?
  gender   String?

  @@index([imageId])
}

enum Role {
  USER
  ADMIN
  DOCTOR
}

model Image {
  id         String   @id @default(cuid())
  url        String   @db.Text
  key        String   @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User[]

  Doctor           Doctor?         @relation(fields: [doctorId], references: [id])
  doctorId         String?
  Specialization   Specialization? @relation(fields: [specializationId], references: [id])
  specializationId String?
  Illness          Illness?        @relation(fields: [illnessId], references: [id])
  illnessId        String?
  Gallery          Gallery?        @relation(fields: [galleryId], references: [id])
  galleryId        String?
  // specializationIcon Specialization[] @relation("iconImage")

  // @@index([illnessId])
  // @@index([specializationId])
  // @@index([doctorId])
  // @@index([galleryId])
}

model Doctor {
  id          String    @id @default(cuid())
  name        String
  phone       String?
  website     String?
  // main_image  String?
  description String?   @db.Text
  open_time   DateTag[]
  // slug              String?         @unique
  // price       Int
  illnesses   Illness[]
  images      Image[]

  specialization Specialization[]
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  reviews        Review[]
}

model DateTag {
  id   String @id @default(cuid())
  time String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  doctor     Doctor?  @relation(fields: [doctorId], references: [id])
  doctorId   String?

  @@index([doctorId])
}

model Specialization {
  id          String    @id @default(uuid())
  name        String
  description String?   @db.Text
  doctors     Doctor[]
  illness     Illness[]
  images      Image[]
  // icon        Image?    @relation("iconImage", fields: [imageId], references: [id])
  imageId     String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}

model Illness {
  id          String  @id @default(uuid())
  name        String
  description String? @db.Text

  images Image[]

  Specialization Specialization[]
  Doctor         Doctor[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Review {
  id String @id @default(uuid())

  comment    String   @db.Text
  rating     Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  doctor     Doctor?  @relation(fields: [doctorId], references: [id])
  doctorId   String?
  isFaq      Boolean  @default(false)

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@index([doctorId])
  @@index([userId])
}

model Gallery {
  id          String  @id @default(uuid())
  name        String?
  description String?
  images      Image[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
